
@using LOBP.Models
@model ApplicationFormModel
@using LOBP.DbEntities

@{

    ViewBag.Title = "My Legacy Applications";
    Layout = "~/Views/Shared/_CompanyLayout.cshtml";
    LOBP.DbEntities.LubeBlendingDBEntities dbCtxt = new LOBP.DbEntities.LubeBlendingDBEntities();
}



<div class="row">
    <div class="pageTitle bg1">
        <h3 class="lefty">My Legacy Applications</h3>
        <div class="clear"></div>
    </div>
</div>
<div class="modal fade" id="modalPopup">
    <div class="modal-dialog">
        <div class="modal-content">
        </div>
    </div>
</div>
<div style="display:none" id="loadingImage">
    <div id="load" style="width: 100%; height: 100%; top:0; left:0; position:fixed; display:block; opacity:0.7; background-color:#fff; z-index:99; text-align:center">
        <img id="loading-image" style="position:absolute; top:100px; left:50%; z-index:100" src="~/Images/spinning.gif" />
    </div>
</div>

@using (Html.BeginForm("EditApplication", "Company", FormMethod.Post))
{
    <div id="modalMapDialog" style="display: none">
        <div id="MapContainer" class="mymodalMapDialog" style="height: 430px; width: 100%;border: 5px solid green;"></div>
    </div>
    <div class="modal fade EditUsermodal" data-backdrop="static" tabindex="-1" role="dialog" aria-labelledby="calenderModalLabel">
        @*<div class="modal-dialog modal" style="display:inline-block; vertical-align:middle; margin:0 auto 0 25%; margin-top:100px; width:50%" role="document">*@
        <div class="modal-dialog modal-lg" style="margin-top:100px; width:50%" role="document">

            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                    <h4 class="modal-title text-success" id="exampleModalLabel"><span class="glyphicon glyphicon-hand-down"></span> Edit Application Form</h4>
                </div>

                <div class="modal-body">
                    <div class="form-horizontal">
                        <div class="container">
                            <div class="row">


                                <div class="col-sm-12">
                                    <div class="form-horizontal">


                                        <input type="hidden" id="IsLegacy" name="IsLegacy" />
                                        <input type="hidden" id="ApplicationID" name="ApplicationID" />
                                        <div class="form-group">
                                            <label class="control-label col-md-2">Name Of Company</label>
                                            <div class="col-md-4">
                                                <input class="form-control" type="text" required="required" id="ApplicantName" name="ApplicantName" />
                                            </div>
                                            <label class="control-label col-md-2">Registered Address</label>
                                            <div class="col-md-4">
                                                <input class="form-control" type="text" required="required" id="RegisteredAddress" name="RegisteredAddress" />
                                            </div>
                                        </div>

                                        <div class="form-group">
                                            <label class="control-label col-md-2">Location Address</label>
                                            <div class="col-md-4">
                                                <input class="form-control" type="text" required="required" id="LocationAddress" name="LocationAddress" />
                                            </div>
                                            <label class="control-label col-md-2">Gps Cordinates</label>
                                            <div class="col-md-4">
                                                <input class="form-control" type="text" id="GpsCordinates" name="GpsCordinates" />
                                            </div>
                                        </div>

                                        <div class="islegacy">
                                            <div class="form-group">
                                                <label class="control-label col-md-2">Issued Date</label>
                                                <div class="col-md-4">
                                                    <input class="form-control" required="required" type="text" id="IssuedDate" name="IssuedDate" />
                                                </div>
                                                <label class="control-label col-md-2">Expiry Date</label>
                                                <div class="col-md-4">
                                                    <input class="form-control" required="required" type="text" id="ExpiryDate" name="ExpiryDate" />
                                                </div>
                                            </div>
                                            <div class="form-group">
                                                <label class="control-label col-md-2">License/Permit Ref Number</label>
                                                <div class="col-md-4">
                                                    <input class="form-control" required="required" type="text" id="LicenseReference" name="LicenseReference" />
                                                </div>

                                                <label class="control-label col-md-2">Application Type</label>
                                                <div class="col-md-4">
                                                    <select class="form-control" required="required" id="ApplicationType" name="ApplicationType">
                                                        <option></option>
                                                        <option>NEW</option>
                                                        <option>RENEW</option>
                                                    </select>
                                                </div>
                                            </div>
                                            <div class="form-group">
                                                <label class="control-label col-md-2">Permit/License Type</label>
                                                <div class="col-md-4">
                                                    <select class="form-control" required="required" id="LicenseTypeCode" name="LicenseTypeCode">
                                                        <option></option>
                                                        <option value="SUI">Site Suitability</option>
                                                        <option value="ATC">Approval to Construct</option>
                                                        <option value="LTO">License to Operate</option>
                                                    </select>
                                                </div>
                                            </div>

                                        </div>
                                        @*</div>*@

                                        <div class="form-group">


                                            <label class="control-label col-md-2">State Located</label>
                                            <div class="col-md-4">
                                                @Html.DropDownListFor(model => model.State, null, new { @class = "form-control select2", required = "required", onchange = "getLga(this.value);" })

                                            </div>
                                            <label class="control-label col-md-2">LGA</label>
                                            <div class="col-md-4">
                                                @Html.DropDownList("LGA", null, new { @class = "form-control select2", required = "required", id = "LGA" })
                                            </div>
                                        </div>









                                        <div class="form-group">

                                            <div class="islto">
                                                <label class="control-label col-md-2">Storage Capacity (MT)</label>
                                                <div class="col-md-4">
                                                    <input class="form-control" required="required" type="text" id="StorageCapacity" name="StorageCapacity" />
                                                </div>
                                            </div>
                                        </div>



                                        <br />
                                        <div class="form-group">
                                            <div class="col-xs-12 col-sm-4 col-sm-offset-6">
                                                <button type="submit" class="btn btn-primary btn-default round" id="addbtn">Save Update</button>
                                            </div>
                                        </div>

                                    </div>
                                </div>


                            </div>
                        </div>
                    </div>

                </div>
            </div>
        </div>
    </div>
}






<div class="row xrow">
    <div class="col-md-12">
        @if (TempData["DeleteMessage"] != null)
        {
            <div class="alert alert-success alert-dismissable text-center" role="alert">
                <span class="glyphicon glyphicon-ok"></span>
                @TempData["DeleteMessage"]
                <button type="button" class="close" data-dismiss="alert" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
        }
        @if (TempData["DeleteErrorMessage"] != null)
        {
            <div class="alert alert-danger alert-dismissable text-center" role="alert">
                <span class="glyphicon glyphicon-exclamation-sign"></span>
                @TempData["DeleteErrorMessage"]
                <button type="button" class="close" data-dismiss="alert" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
        }
        <table class="table">
            <thead>
                <tr>
                    <th>#</th>
                    <th>Reference Number</th>
                    <th>Company Name</th>
                    <th>Facility Location</th>
                    <th>Application Type</th>
                    <th>Date Applied</th>
                    <th>Status</th>
                    <th></th>
                    <th></th>
                </tr>
            </thead>
            <tbody>

                @{ViewBag.Counter = 0;}
                @if (ViewBag.ApplicationDetails != null)
                {
                    foreach (var appmaster in ViewBag.ApplicationDetails)
                    {
                        <tr>
                            <td>@(ViewBag.Counter += 1)</td>
                            <td>@appmaster.ApplicationId</td>
                            <td>@appmaster.ApplicantName</td>
                            <td>@appmaster.SiteLocationAddress</td>
                            <td>@appmaster.LicenseTypeId</td>
                            <td>@appmaster.AddedDate.ToString("dd-MMMM-yyyy")</td>
                            <td>
                                @if (appmaster.CurrentStageID == 46)
                                {

                                    <a class="btn btn-success btn-xs round" href="@Url.Action("LegacyApplication", new { LicenseTypeId = appmaster.LicenseTypeId, ReferenceId = appmaster.ApplicationId })">Upload Legacy Document</a>
                                }
                                else if (appmaster.CurrentStageID == 46 && appmaster.Status == "Rejected")
                                {
                                    <a class="btn btn-success btn-xs round" href="@Url.Action("LegacyApplication", new { LicenseTypeId = appmaster.LicenseTypeId, ReferenceId = appmaster.ApplicationId })">Upload Legacy Document</a>
                                }
                                else if (appmaster.Status == "Approved")
                                {
                                    <strong class="badge" style="background-color:green">Approved</strong>
                                }
                                else if (appmaster.Status == "Payment Completed")
                                {
                                    <strong class="badge" style="background-color:green">Payment Completed</strong>

                                }
                                else if (appmaster.Status == "Payment Failed")
                                {
                                    <strong class="badge" style="background-color:red">Payment Failed</strong>

                                }
                                else
                                {
                                    <strong class="badge" style="background-color:sandybrown">Processing</strong>
                                }
                            </td>
                            <td>
                                <a class="btn btn-primary btn-xs round" href="#"
                                   onclick="javascript:MoveToEditAction('@appmaster.ApplicationId','@appmaster.ApplicantName','@appmaster.LicenseTypeId','@appmaster.ApplicationTypeId','@appmaster.RegisteredAddress','@appmaster.SiteLocationAddress','@appmaster.StorageCapacity','@appmaster.LicenseReference','@appmaster.LicenseIssuedDate','@appmaster.LicenseExpiryDate','@appmaster.IsLegacy','@appmaster.CurrentStageID','@appmaster.GPSCordinates')">
                                    <span class="glyphicon glyphicon-edit"></span> Edit
                                </a>

                            </td>
                            <td>
                                @if (appmaster.Status != "Rejected")
                                {
                                    <a class="btn btn-danger btn-xs round" href="#" onclick="javascript:MoveToDeleteAction('@appmaster.ApplicationId','@appmaster.CurrentStageID')">
                                        <span class="glyphicon glyphicon-trash"></span> Delete
                                    </a>
                                }

                            </td>


                        </tr>
                    }
                }
            </tbody>
        </table>

    </div>
</div>
@section scripts{
    <script src="@Url.Content("~/Scripts/jquery.ui.widget.js")" type="text/javascript"></script>
    <script src="@Url.Content("~/Scripts/jquery.iframe-transport.js")" type="text/javascript"></script>
    <script type="text/javascript" src="https://maps.googleapis.com/maps/api/js?key=AIzaSyC2df9i_A809q2eQQizBb7UqSGXASsQHVQ&libraries=places"></script>
    <script src="@Url.Content("~/Scripts/jquery-ui.min.js")" type="text/javascript"></script>
    <link href="@Url.Content("~/Content/jquery-ui.css")" rel="stylesheet" />
    <script src="@Url.Content("~/Scripts/multipleselect/js/jquery.multiselect.js")"></script>


    <script type="text/javascript">
        $(function () {
            $("#IssuedDate, #ExpiryDate").datepicker({
                "onSelect": function (date) {
                }, changeMonth: true, changeYear: true, dateFormat: "M d yy"
            });
            $(".use-address").click(function () {
                var item = $(this).closest("tr").find(".nr").text();

            });
        });

        google.maps.event.addDomListener(window, 'load', function () {
            var options = {
                componentRestrictions: { country: "ng" }
            };
            debugger;
            var places = new google.maps.places.Autocomplete(document.getElementById('LocationAddress'), options);
            // var places = new google.maps.places.Autocomplete(document.getElementById('RegisteredAddress'), options);
            google.maps.event.addListener(places, 'place_changed', function () {
                var place = places.getPlace();
                var address = place.formatted_address;
                var latitude = place.geometry.location.lat();
                var longitude = place.geometry.location.lng();
                var mesg = "Location Address Is : " + address;
                mesg += "\nLocation Latitude Is : " + latitude;
                mesg += "\nLocation Longitude Is: " + longitude;
                $(".EditUsermodal").modal('hide');
                showMap(address, latitude, longitude);
            });
        });
        function showMap(locationaddress, latitude, longitude) {
            var markers = [];

            $("#modalMapDialog").dialog({
                modal: true,
                title: "Address Location on Map",
                width: 550,
                hright: 400,
                buttons: {
                    Close: function () {
                        $(this).dialog('close');
                        $(".EditUsermodal").modal('show');
                    },
                    Okay: function () {
                        //$('#secondDiv').show();
                        $("#GpsCordinates").val(latitude + ',' + longitude);
                        $(this).dialog('close');
                        $(".EditUsermodal").modal('show');

                    }
                },
                open: function () {

                    google.maps.visualRefresh = true;
                    var myCenter = new google.maps.LatLng(latitude, longitude);
                    var mapCanvas = document.getElementById("MapContainer");
                    var mapOptions = {
                        center: myCenter,
                        zoom: 14,
                        mapTypeId: google.maps.MapTypeId.ROADMAP,
                        panControl: true,
                        zoomControl: true,
                        mapTypeControl: true,
                        scaleControl: true,
                        streetViewControl: true,
                        overviewMapControl: true,
                        rotateControl: true,
                        zoomControl: true,
                        zoomControlOptions: {
                            style: google.maps.ZoomControlStyle.SMALL
                        },
                        mapTypeControl: true,
                        mapTypeControlOptions: {
                            style: google.maps.MapTypeControlStyle.DROPDOWN_MENU,
                            position: google.maps.ControlPosition.TOP_CENTER,
                            mapTypeIds: [
                                google.maps.MapTypeId.ROADMAP,
                                google.maps.MapTypeId.TERRAIN,
                                google.maps.MapTypeId.SATELLITE,
                                google.maps.MapTypeId.HYBRID
                            ]
                        }
                    };

                    var map = new google.maps.Map(mapCanvas, mapOptions);
                    var marker = new google.maps.Marker({ position: myCenter, animation: google.maps.Animation.BOUNCE });
                    marker.setMap(map);

                    var infowindow = new google.maps.InfoWindow({
                        content: locationaddress
                    });
                    infowindow.open(map, marker);

                    // Zoom to 9 when clicking on marker
                    google.maps.event.addListener(marker, 'click', function () {
                        map.setZoom(13);
                        map.setCenter(marker.getPosition());
                    });
                }
            });
        }
        function getLga(stateCode) {
            var strMethodUrl = '@Url.Action("GetLga")' + '?stateCode=' + stateCode;
            $.getJSON(strMethodUrl, function (data) {
                if (data != null) {

                    $("#LGA").html("");
                    $("#GpsCordinates").val("");

                    for (var i = 0; i < data.length; i++) {
                        $("#LGA").append('<option value="' + data[i].lga_code + '">' + data[i].lga_name + '</option>');
                        $("#GpsCordinates").val(data[i].latitude + ',' + data[i].longitude);
                    }
                }
            }).fail(function (jqxhr, textStatus, error) { alert("fail =>> " + textStatus + ", " + error); });
        }

        function MoveToDeleteAction(ApplicationID, CurrentStageID) {
            var basestage = "5";
            var legacystage = "24";
            if ((Number(basestage) > Number(CurrentStageID)) || (Number(CurrentStageID) === Number(legacystage))) {

                var action = confirm("Are you sure you want to delete application with the reference number " + ApplicationID + "?" + "(NOTE: Please don't delete this application if you have made payment).");
                if (action === true) {
                    $.post("/Company/DeleteApplication", { AppID: ApplicationID }, function (data) {
                        debugger;
                        var d = data;
                        if (d === "success") {
                            alert("Application with the reference number " + ApplicationID + " was successfully deleted.");
                            window.location.href = "/Company/MyApplications";
                        } else {
                            alert("Unable to delete application with the reference number " + ApplicationID);

                        }

                    });

                }
                else {
                    return false;
                }
            }
            else { alert("You can not delete the application with the reference number " + ApplicationID + " because it has been passed for approval")}

        }

        function MoveToConfirmPayment(appid) {
            if (appid !== null || appid !== "" || appid.length !== 0) {
                var confirmaction = confirm("Are you sure you want to confirm payment?");
                if (confirmaction === true) {
                    $.get("/Company/ConfirmPayment", { id: appid }, function (data) {
                        var res = data;
                        if (res === "success") {
                            alert("Your payment confirmation was successful.");
                            window.location.href = "/Company/MyApplications";
                        }
                        else if (res === "no payment") {
                            alert("No payment was found for this application.");
                        }
                        else if (res === "no rrr") {
                            alert("Remita reference number was not generated for this application.")
                        }
                        else if (res === "exception") {
                            alert("Something went wrong while trying to confirm payment. Please try again later.")
                        }
                    });
                }
            }
        }

        function MoveToEditAction(ApplicationID, ApplicantName, LicenseTypeCode, ApplicationType, RegisteredAddress, LocationAddress, StorageCapacity, LicenseReference, IssuedDate, ExpiryDate, IsLegacy, CurrentStageID, GpsCordinates) {
            $(".islegacy").hide('fast');
            $(".islto").hide('fast');
            debugger;

            var basestage = "5";
            var legacystage = "24";
            if ((Number(basestage) > Number(CurrentStageID)) || (Number(CurrentStageID) === Number(legacystage))) {

                if (IsLegacy === "YES") {
                    $(".islegacy").show('fast');
                    $("#IssuedDate").val(IssuedDate);
                    $("#ExpiryDate").val(ExpiryDate);
                }
                if (LicenseTypeCode === "LTO") {
                    $(".islto").show('fast');
                }
                $("#ApplicationID").val(ApplicationID);
                $("#ApplicantName").val(ApplicantName);
                $("#LicenseTypeCode").val(LicenseTypeCode);
                $("#ApplicationType").val(ApplicationType);
                $("#RegisteredAddress").val(RegisteredAddress);
                $("#LocationAddress").val(LocationAddress);
                $("#StorageCapacity").val(StorageCapacity);
                $("#LicenseReference").val(LicenseReference);
                $("#GpsCordinates").val(GpsCordinates);
                $("#IsLegacy").val(IsLegacy);

                $(".EditUsermodal").modal('show');
            } else { alert("You can not edit the application with reference number " + ApplicationID + " because it has been passed for approval");}
        }
        function MoveToAction(ActionName, ApplicationID) {

            var r = confirm("Do You Really Want To Continue?");
            if (r == true) {
                var url = '@Url.Action("replace")';
                url = url.replace("replace", ActionName);

                window.location.href = url + "?ApplicationId=" + ApplicationID;

            }
        }


        function MoveToATC(ActionName,LicenseDefnId,PTELicense) {

            var r = confirm("Do You Really Want To Continue?");
            if (r == true) {
                var url = '@Url.Action("replace")';
                url = url.replace("replace", ActionName);

                window.location.href = url + "?LicenseDefnId=" + LicenseDefnId + "&PTEReference=" + PTELicense;
            }
        }

         function ApproveInspection(applicationRef) {
            debugger;
            var url = '@Url.Action("GetInspectionDetail")';
            $("#loadingImage").show('fast');
            $.get(url, { applicationId: applicationRef }, function (data) {
                $("#modalPopup").on('show.bs.modal', function () {
                    var modal = $(this);
                    modal.find('.modal-content').html(data);
                });
                $("#modalPopup").modal('show');
                $("#loadingImage").hide('fast');
            });
        }

    </script>

}

